"""
Description: This module contains the QuadrotorController class, which is used to control the quadrotor's position and orientation. We use a PID controller based on the work in "Modelling and PID Controller Design for a Quadrotor Unmanned Air Vehicle" (Salih et al. 20??) 
"""

# delete these notes when done

import QuadrotorPhysicalConstants

def QuadrotorInputs(self, thruster_commands, quad):        
    Th_1 = thruster_commands[0]     # The thrusts generated by four rotors
    Th_2 = thruster_commands[1] 
    Th_3 = thruster_commands[2]
    Th_4 = thruster_commands[3]

    l = quad['d'] / 2                                           # Half length of the helicopter
    m = quad['M']                                               # Total mass of the helicopter
    I_1, I_2, I_3 = quad['J'][0], quad['J'][1], quad['J'][2]    # Moments of inertia with respect to the axes
    K_4, K_5, K_6 = quad['K'][3], quad['K'][4], quad['K'][5]    # The drag coefficients
    C = 1                                                       # Force to moment scaling factor

    u1 = (Th_1 + Th_2 + Th_3 + Th_4) / m           # Vertical thrust generated by the four rotors
    u2 = l * (Th_1 - Th_2 + Th_3 - Th_4) / I_1     # Pitching moment
    u3 = l * (Th_1 + Th_2 - Th_3 - Th_4) / I_2     # Yawing moment
    u4 = C * (Th_1 - Th_2 + Th_3 - Th_4) / I_3     # Rolling moment

def QuadrotorEquationsOfMotion(x, quad):

    # Unpack the state vector because I can't remember what the order is